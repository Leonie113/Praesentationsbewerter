/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults, } from "@stencil/router";
export namespace Components {
    interface AnmerkungsFeld {
        "name": string;
    }
    interface AppAuswertung {
        "test": string;
    }
    interface AppBewertung {
    }
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface AufklappButton {
        "Kriterium1": string;
        "Kriterium2": string;
        "Kriterium3": string;
        "Kriterium4": string;
        "Ueberschrift": string;
        "inputs": NodeListOf<HTMLInputElement>;
        "regler": string;
        "value": number;
        "value1": string;
        "value2": string;
        "value3": string;
        "value4": string;
    }
    interface AufklappButtonKurz {
        "Kriterium1": string;
        "Kriterium2": string;
        "Ueberschrift": string;
        "inputs": NodeListOf<HTMLInputElement>;
        "regler": string;
        "value": number;
        "value1": string;
        "value2": string;
    }
    interface AufklappInput {
        "Kriterium1": string;
        "Kriterium2": string;
        "Kriterium3": string;
        "Kriterium4": string;
        "Ueberschrift": string;
    }
    interface AuswertungButton {
        "Kriterium1": string;
        "Kriterium2": string;
        "Kriterium3": string;
        "Kriterium4": string;
        "Ueberschrift": string;
        "regler": string;
        "text": any;
        "value": number;
    }
    interface AuswertungButtonKurz {
        "Kriterium1": string;
        "Kriterium2": string;
        "Ueberschrift": string;
        "regler": string;
        "value": number;
    }
    interface AuswertungDaten {
        "Ueberschrift": string;
        "dozent": string;
        "gruppe": string;
        "leistung": string;
        "matrikelnummer1": string;
        "matrikelnummer2": string;
        "matrikelnummer3": string;
        "matrikelnummer4": string;
        "projekt": string;
        "regler": string;
        "text": string;
        "value": number;
    }
    interface BewertungEnd {
        "button": string;
    }
    interface EingabeFelder {
    }
    interface ExportButton {
        "button": string;
    }
    interface FooterLeonie {
    }
    interface FormularLarissa {
        "ueberpruefeEingabe": () => Promise<void>;
        "value": string;
    }
    interface HeaderLeonie {
    }
    interface HeadlineMittig {
        "text": string;
    }
    interface RadioInput {
        "Kriterium1": string;
        "Kriterium2": string;
        "Kriterium3": string;
        "Kriterium4": string;
        "Ueberschrift": string;
        "regler": string;
        "value": number;
    }
    interface ReglerWertung {
        "regler": string;
        "value": number;
    }
    interface WeiterButton {
    }
    interface ZurueckButton {
    }
}
declare global {
    interface HTMLAnmerkungsFeldElement extends Components.AnmerkungsFeld, HTMLStencilElement {
    }
    var HTMLAnmerkungsFeldElement: {
        prototype: HTMLAnmerkungsFeldElement;
        new (): HTMLAnmerkungsFeldElement;
    };
    interface HTMLAppAuswertungElement extends Components.AppAuswertung, HTMLStencilElement {
    }
    var HTMLAppAuswertungElement: {
        prototype: HTMLAppAuswertungElement;
        new (): HTMLAppAuswertungElement;
    };
    interface HTMLAppBewertungElement extends Components.AppBewertung, HTMLStencilElement {
    }
    var HTMLAppBewertungElement: {
        prototype: HTMLAppBewertungElement;
        new (): HTMLAppBewertungElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAufklappButtonElement extends Components.AufklappButton, HTMLStencilElement {
    }
    var HTMLAufklappButtonElement: {
        prototype: HTMLAufklappButtonElement;
        new (): HTMLAufklappButtonElement;
    };
    interface HTMLAufklappButtonKurzElement extends Components.AufklappButtonKurz, HTMLStencilElement {
    }
    var HTMLAufklappButtonKurzElement: {
        prototype: HTMLAufklappButtonKurzElement;
        new (): HTMLAufklappButtonKurzElement;
    };
    interface HTMLAufklappInputElement extends Components.AufklappInput, HTMLStencilElement {
    }
    var HTMLAufklappInputElement: {
        prototype: HTMLAufklappInputElement;
        new (): HTMLAufklappInputElement;
    };
    interface HTMLAuswertungButtonElement extends Components.AuswertungButton, HTMLStencilElement {
    }
    var HTMLAuswertungButtonElement: {
        prototype: HTMLAuswertungButtonElement;
        new (): HTMLAuswertungButtonElement;
    };
    interface HTMLAuswertungButtonKurzElement extends Components.AuswertungButtonKurz, HTMLStencilElement {
    }
    var HTMLAuswertungButtonKurzElement: {
        prototype: HTMLAuswertungButtonKurzElement;
        new (): HTMLAuswertungButtonKurzElement;
    };
    interface HTMLAuswertungDatenElement extends Components.AuswertungDaten, HTMLStencilElement {
    }
    var HTMLAuswertungDatenElement: {
        prototype: HTMLAuswertungDatenElement;
        new (): HTMLAuswertungDatenElement;
    };
    interface HTMLBewertungEndElement extends Components.BewertungEnd, HTMLStencilElement {
    }
    var HTMLBewertungEndElement: {
        prototype: HTMLBewertungEndElement;
        new (): HTMLBewertungEndElement;
    };
    interface HTMLEingabeFelderElement extends Components.EingabeFelder, HTMLStencilElement {
    }
    var HTMLEingabeFelderElement: {
        prototype: HTMLEingabeFelderElement;
        new (): HTMLEingabeFelderElement;
    };
    interface HTMLExportButtonElement extends Components.ExportButton, HTMLStencilElement {
    }
    var HTMLExportButtonElement: {
        prototype: HTMLExportButtonElement;
        new (): HTMLExportButtonElement;
    };
    interface HTMLFooterLeonieElement extends Components.FooterLeonie, HTMLStencilElement {
    }
    var HTMLFooterLeonieElement: {
        prototype: HTMLFooterLeonieElement;
        new (): HTMLFooterLeonieElement;
    };
    interface HTMLFormularLarissaElement extends Components.FormularLarissa, HTMLStencilElement {
    }
    var HTMLFormularLarissaElement: {
        prototype: HTMLFormularLarissaElement;
        new (): HTMLFormularLarissaElement;
    };
    interface HTMLHeaderLeonieElement extends Components.HeaderLeonie, HTMLStencilElement {
    }
    var HTMLHeaderLeonieElement: {
        prototype: HTMLHeaderLeonieElement;
        new (): HTMLHeaderLeonieElement;
    };
    interface HTMLHeadlineMittigElement extends Components.HeadlineMittig, HTMLStencilElement {
    }
    var HTMLHeadlineMittigElement: {
        prototype: HTMLHeadlineMittigElement;
        new (): HTMLHeadlineMittigElement;
    };
    interface HTMLRadioInputElement extends Components.RadioInput, HTMLStencilElement {
    }
    var HTMLRadioInputElement: {
        prototype: HTMLRadioInputElement;
        new (): HTMLRadioInputElement;
    };
    interface HTMLReglerWertungElement extends Components.ReglerWertung, HTMLStencilElement {
    }
    var HTMLReglerWertungElement: {
        prototype: HTMLReglerWertungElement;
        new (): HTMLReglerWertungElement;
    };
    interface HTMLWeiterButtonElement extends Components.WeiterButton, HTMLStencilElement {
    }
    var HTMLWeiterButtonElement: {
        prototype: HTMLWeiterButtonElement;
        new (): HTMLWeiterButtonElement;
    };
    interface HTMLZurueckButtonElement extends Components.ZurueckButton, HTMLStencilElement {
    }
    var HTMLZurueckButtonElement: {
        prototype: HTMLZurueckButtonElement;
        new (): HTMLZurueckButtonElement;
    };
    interface HTMLElementTagNameMap {
        "anmerkungs-feld": HTMLAnmerkungsFeldElement;
        "app-auswertung": HTMLAppAuswertungElement;
        "app-bewertung": HTMLAppBewertungElement;
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "aufklapp-button": HTMLAufklappButtonElement;
        "aufklapp-button-kurz": HTMLAufklappButtonKurzElement;
        "aufklapp-input": HTMLAufklappInputElement;
        "auswertung-button": HTMLAuswertungButtonElement;
        "auswertung-button-kurz": HTMLAuswertungButtonKurzElement;
        "auswertung-daten": HTMLAuswertungDatenElement;
        "bewertung-end": HTMLBewertungEndElement;
        "eingabe-felder": HTMLEingabeFelderElement;
        "export-button": HTMLExportButtonElement;
        "footer-leonie": HTMLFooterLeonieElement;
        "formular-larissa": HTMLFormularLarissaElement;
        "header-leonie": HTMLHeaderLeonieElement;
        "headline-mittig": HTMLHeadlineMittigElement;
        "radio-input": HTMLRadioInputElement;
        "regler-wertung": HTMLReglerWertungElement;
        "weiter-button": HTMLWeiterButtonElement;
        "zurueck-button": HTMLZurueckButtonElement;
    }
}
declare namespace LocalJSX {
    interface AnmerkungsFeld {
        "name"?: string;
    }
    interface AppAuswertung {
        "test"?: string;
    }
    interface AppBewertung {
    }
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface AufklappButton {
        "Kriterium1"?: string;
        "Kriterium2"?: string;
        "Kriterium3"?: string;
        "Kriterium4"?: string;
        "Ueberschrift"?: string;
        "inputs"?: NodeListOf<HTMLInputElement>;
        "regler"?: string;
        "value"?: number;
        "value1"?: string;
        "value2"?: string;
        "value3"?: string;
        "value4"?: string;
    }
    interface AufklappButtonKurz {
        "Kriterium1"?: string;
        "Kriterium2"?: string;
        "Ueberschrift"?: string;
        "inputs"?: NodeListOf<HTMLInputElement>;
        "regler"?: string;
        "value"?: number;
        "value1"?: string;
        "value2"?: string;
    }
    interface AufklappInput {
        "Kriterium1"?: string;
        "Kriterium2"?: string;
        "Kriterium3"?: string;
        "Kriterium4"?: string;
        "Ueberschrift"?: string;
        "onLoginShouldOccur"?: (event: CustomEvent<any>) => void;
    }
    interface AuswertungButton {
        "Kriterium1"?: string;
        "Kriterium2"?: string;
        "Kriterium3"?: string;
        "Kriterium4"?: string;
        "Ueberschrift"?: string;
        "regler"?: string;
        "text"?: any;
        "value"?: number;
    }
    interface AuswertungButtonKurz {
        "Kriterium1"?: string;
        "Kriterium2"?: string;
        "Ueberschrift"?: string;
        "regler"?: string;
        "value"?: number;
    }
    interface AuswertungDaten {
        "Ueberschrift"?: string;
        "dozent"?: string;
        "gruppe"?: string;
        "leistung"?: string;
        "matrikelnummer1"?: string;
        "matrikelnummer2"?: string;
        "matrikelnummer3"?: string;
        "matrikelnummer4"?: string;
        "projekt"?: string;
        "regler"?: string;
        "text"?: string;
        "value"?: number;
    }
    interface BewertungEnd {
        "button"?: string;
    }
    interface EingabeFelder {
        "onLoginShouldOccur"?: (event: CustomEvent<any>) => void;
    }
    interface ExportButton {
        "button"?: string;
    }
    interface FooterLeonie {
    }
    interface FormularLarissa {
        "onChanged"?: (event: CustomEvent<string>) => void;
        "value"?: string;
    }
    interface HeaderLeonie {
    }
    interface HeadlineMittig {
        "text"?: string;
    }
    interface RadioInput {
        "Kriterium1"?: string;
        "Kriterium2"?: string;
        "Kriterium3"?: string;
        "Kriterium4"?: string;
        "Ueberschrift"?: string;
        "regler"?: string;
        "value"?: number;
    }
    interface ReglerWertung {
        "regler"?: string;
        "value"?: number;
    }
    interface WeiterButton {
    }
    interface ZurueckButton {
    }
    interface IntrinsicElements {
        "anmerkungs-feld": AnmerkungsFeld;
        "app-auswertung": AppAuswertung;
        "app-bewertung": AppBewertung;
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "aufklapp-button": AufklappButton;
        "aufklapp-button-kurz": AufklappButtonKurz;
        "aufklapp-input": AufklappInput;
        "auswertung-button": AuswertungButton;
        "auswertung-button-kurz": AuswertungButtonKurz;
        "auswertung-daten": AuswertungDaten;
        "bewertung-end": BewertungEnd;
        "eingabe-felder": EingabeFelder;
        "export-button": ExportButton;
        "footer-leonie": FooterLeonie;
        "formular-larissa": FormularLarissa;
        "header-leonie": HeaderLeonie;
        "headline-mittig": HeadlineMittig;
        "radio-input": RadioInput;
        "regler-wertung": ReglerWertung;
        "weiter-button": WeiterButton;
        "zurueck-button": ZurueckButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "anmerkungs-feld": LocalJSX.AnmerkungsFeld & JSXBase.HTMLAttributes<HTMLAnmerkungsFeldElement>;
            "app-auswertung": LocalJSX.AppAuswertung & JSXBase.HTMLAttributes<HTMLAppAuswertungElement>;
            "app-bewertung": LocalJSX.AppBewertung & JSXBase.HTMLAttributes<HTMLAppBewertungElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "aufklapp-button": LocalJSX.AufklappButton & JSXBase.HTMLAttributes<HTMLAufklappButtonElement>;
            "aufklapp-button-kurz": LocalJSX.AufklappButtonKurz & JSXBase.HTMLAttributes<HTMLAufklappButtonKurzElement>;
            "aufklapp-input": LocalJSX.AufklappInput & JSXBase.HTMLAttributes<HTMLAufklappInputElement>;
            "auswertung-button": LocalJSX.AuswertungButton & JSXBase.HTMLAttributes<HTMLAuswertungButtonElement>;
            "auswertung-button-kurz": LocalJSX.AuswertungButtonKurz & JSXBase.HTMLAttributes<HTMLAuswertungButtonKurzElement>;
            "auswertung-daten": LocalJSX.AuswertungDaten & JSXBase.HTMLAttributes<HTMLAuswertungDatenElement>;
            "bewertung-end": LocalJSX.BewertungEnd & JSXBase.HTMLAttributes<HTMLBewertungEndElement>;
            "eingabe-felder": LocalJSX.EingabeFelder & JSXBase.HTMLAttributes<HTMLEingabeFelderElement>;
            "export-button": LocalJSX.ExportButton & JSXBase.HTMLAttributes<HTMLExportButtonElement>;
            "footer-leonie": LocalJSX.FooterLeonie & JSXBase.HTMLAttributes<HTMLFooterLeonieElement>;
            "formular-larissa": LocalJSX.FormularLarissa & JSXBase.HTMLAttributes<HTMLFormularLarissaElement>;
            "header-leonie": LocalJSX.HeaderLeonie & JSXBase.HTMLAttributes<HTMLHeaderLeonieElement>;
            "headline-mittig": LocalJSX.HeadlineMittig & JSXBase.HTMLAttributes<HTMLHeadlineMittigElement>;
            "radio-input": LocalJSX.RadioInput & JSXBase.HTMLAttributes<HTMLRadioInputElement>;
            "regler-wertung": LocalJSX.ReglerWertung & JSXBase.HTMLAttributes<HTMLReglerWertungElement>;
            "weiter-button": LocalJSX.WeiterButton & JSXBase.HTMLAttributes<HTMLWeiterButtonElement>;
            "zurueck-button": LocalJSX.ZurueckButton & JSXBase.HTMLAttributes<HTMLZurueckButtonElement>;
        }
    }
}
